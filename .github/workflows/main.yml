name: CI Pipeline

on:
  push:
    branches: ["main"] # only run on direct pushes to main (which should not happen)
  pull_request:
    branches: ["main", "develop"]

jobs:

  ### Build and Unit Test Backend
  build-and-test-backend:
    runs-on: ubuntu-latest

    # Set up postgres
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test-user
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      # for npm
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          npm ci

      - name: Run Linter
        working-directory: ./backend
        run: npm run lint

      - name: Run Prettier Formatting Check
        working-directory: ./backend
        run: npm run format
      
      - name: Set up PostgreSQL
        working-directory: ./backend
        run: |
          echo "DB_DIALECT=postgres" >> $GITHUB_ENV
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_USER=test-user" >> $GITHUB_ENV
          echo "DB_PASS=password" >> $GITHUB_ENV
          echo "DB_NAME=testdb" >> $GITHUB_ENV

      - name: Build & Check if Backend Runs
        working-directory: ./backend
        run: |
          npm start & 
          SERVER_PID=$!
          sleep 5
          kill $SERVER_PID
      
      - name: Test Backend
        working-directory: ./backend
        run: npm run build && npm run test

      - name: Zip Backend
        working-directory: ./backend
        run: zip release.zip ./* -r
      
      - name: Upload Backend Build and Test Artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend-artifact
          path: backend/release.zip


  ### Build and Unit Test Frontend (react.js)
  build-and-test-frontend:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3

        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
              node-version: "18"
        
        - name: Install Frontend Dependencies
          working-directory: ./frontend
          run: |
            npm ci

        - name: Run Linter
          working-directory: ./frontend
          run: npm run lint

        - name: Run Prettier Formatting Check
          working-directory: ./frontend
          run: npm run format

          # build frontend
        - name: Build Frontend
          working-directory: ./frontend
          run: |
            npm run build

        - name: Test Frontend
          working-directory: ./frontend
          run: npm run test

        - name: Zip Frontend
          working-directory: ./frontend
          run: zip release.zip ./* -r
        
        - name: Upload Frontend Build and Test Artifact
          uses: actions/upload-artifact@v2
          with:
            name: frontend-artifact
            path: frontend/release.zip
  
  ### Smoke Tests using Playwright
  smoke-tests:
    runs-on: ubuntu-latest
    needs: [build-and-test-backend, build-and-test-frontend]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
            node-version: "18"
      
      - name: Install Testing Dependencies
        working-directory: ./e2e
        run: |
          npm ci
      
      - name: Install Playwright browsers
        working-directory: ./e2e
        run: npx playwright install chromium # only uses chromium for tests
      
      - name: Run smoke tests
        working-directory: ./e2e/smoke-test
        run: npx playwright test
          